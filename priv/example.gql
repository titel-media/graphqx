interface Node {
  id : ID!
}

type Monster implements Node {
  id : ID!
  name : String!
}

type Post implements Node {
  id: ID!
  published: Boolean
  slug: String
}

type Body implements Node {
  id: ID!
  parent_id: ID!
  role: String
}

union PostResp = Post | Body

# type Mutation {
#   introduceRoom(input: IntroduceRoomInput!) : IntroduceRoomPayload
#   introduceMonster(input: IntroduceMonsterInput!) : IntroduceMonsterPayload
#   introduceItem(input: IntroduceItemInput!) : IntroduceItemPayload
#   spawnMinion(input: SpawnMinionInput!) : SpawnMinionPayload
# }

type Query {
  monster(id: ID!) : Monster
  post(slug: ID!) : PostResp
}

schema {
  query : Query
  # mutation : Mutation
}

